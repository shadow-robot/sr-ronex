#!/usr/bin/env python
PACKAGE="sr_ronex_drivers"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("pwm_clock_divider", int_t, 0, "The divider which is applied to the master clock (which runs at 64MHz).", 20, 1, 65536)

gen.add("input_mode_0", bool_t, 1, "Digital Pin 0 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_1", bool_t, 1, "Digital Pin 1 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_2", bool_t, 1, "Digital Pin 2 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_3", bool_t, 1, "Digital Pin 3 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_4", bool_t, 1, "Digital Pin 4 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_5", bool_t, 1, "Digital Pin 5 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_6", bool_t, 1, "Digital Pin 6 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_7", bool_t, 1, "Digital Pin 7 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_8", bool_t, 1, "Digital Pin 8 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_9", bool_t, 1, "Digital Pin 9 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_10", bool_t, 1, "Digital Pin 10 - True to use digital pins as inputs, false to use them as outputs.", True)
gen.add("input_mode_11", bool_t, 1, "Digital Pin 11 - True to use digital pins as inputs, false to use them as outputs.", True)


#@todo do we want an enum for the pwm periods?
gen.add("pwm_period_0", int_t, 0, "The PWM period for the given module.", 64000, 2, 65536)
gen.add("pwm_period_1", int_t, 0, "The PWM period for the given module.", 64000, 2, 65536)
gen.add("pwm_period_2", int_t, 0, "The PWM period for the given module.", 64000, 2, 65536)
gen.add("pwm_period_3", int_t, 0, "The PWM period for the given module.", 64000, 2, 65536)
gen.add("pwm_period_4", int_t, 0, "The PWM period for the given module.", 64000, 2, 65536)
gen.add("pwm_period_5", int_t, 0, "The PWM period for the given module.", 64000, 2, 65536)


exit(gen.generate(PACKAGE, "ronex", "GeneralIO"))
